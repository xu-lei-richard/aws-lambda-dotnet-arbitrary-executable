AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: AWS Lambda .NET Core C# Run Arbitrary Executable

Resources:

  # S3 bucket to store image
  ImageStore:
    Type: AWS::S3::Bucket

  # Lambda function
  CaptureFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: AwsLambdaRunArbitraryExecutable::AwsLambdaRunArbitraryExecutable.Function::Capture
      Runtime: dotnetcore1.0
      CodeUri: publish\AwsLambdaRunArbitraryExecutable.zip
      MemorySize: 256
      Timeout: 30
      Role: !GetAtt ExecutionRole.Arn
      Environment:
        Variables:
          S3bucket: !Select [ 0, !Split [ ".", !GetAtt ImageStore.DomainName ] ]

  # Lambda execution role
  ExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              Service: 
                - "lambda.amazonaws.com"
            Action: 
              - "sts:AssumeRole"

  # Lambda execution policy
  ExecutionPolicy:
    Type: AWS::IAM::Policy
    Properties: 
      PolicyName: ExecutionPolicy
      PolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Action: 
              - "logs:CreateLogGroup"
              - "logs:CreateLogStream"
              - "logs:PutLogEvents"
            Resource: "*"
          - 
            Effect: "Allow"
            Action:
              - "s3:ListBucket"
              - "s3:PutObject"
            Resource: "*"
      Roles:
        - Ref: ExecutionRole


Outputs:
  ImageStoreBucketName:
    Value: !Select [ 0, !Split [ ".", !GetAtt ImageStore.DomainName ] ]
      
